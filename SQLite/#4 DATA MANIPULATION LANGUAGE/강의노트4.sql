drop table movies; -- 테이블 삭제

create table movies( -- 테이블 생성
   movie_id INTEGER PRIMARY KEY AUTOINCREMENT, -- INTEGER=int, PRIMARY KEY=고유 식별자, AUTOINCREMENT=이걸 활성화 하지 않을 경우 sqlite는 
  -- 삭제된 movie_id를 새로운 데이터에 할당함, 활성화할 경우 삭제된 movie_id를 재사용하지 않음
   title TEXT UNIQUE NOT NULL, 
   released INTEGER NOT NULL,
   overview TEXT NOT NULL CHECK (LENGTH(overview) < 10), -- CHECH=조건부 함수를 걸어주는 명령어, LENGTH=글자수를 세어주는 sqlite 내장 함수 
   rating REAL NOT NULL CHECK (rating BETWEEN 0 and 10), -- REAL=FLOAT
   director TEXT,
   for_kids INTEGER NOT NULL DEFAULT 0 CHECK (for_kids BETWEEN 0 and 1) -- sqlite에서는 BOOLEAN을 INT로 표현한다. ex) 0, 1
   -- posert BLOB -> byte large object 즉 이진 데이터 덩어리란 뜻이고 이미지를 저장할 때 사용한다.
 ) STRICT; -- STRICT=각 칼럼에 부여된 조건들을 강제해주는 명령어

-- INSERT INTO VALUES 
insert into movies values (
  'kingkong',
  1999,
  'very good',
  9.9,
  'steven'
); -- 모든 칼럼을 입력해야함, 불편

insert into movies 
  (title, released, overview, rating, director) -- 입력하고 싶은 칼럼만 선택할 수 있음
  values 
  ('우리들만의 블루스', 2025, '재밋음', 9.9, '봉준호'), 
  ('인터스텔라', 2014, '심오함', 10, '스티븐 스필버그'),
  ('동물농장', 2010, '심오함', 8.9, '조지 오웰'),
  ('굿윌헌팅', 1998, '감동적임', 9, '스티븐 스필버그'),
  ('토이스토리3', 2018, '향수를 불러일으킴', 10, '?');

INSERT INTO movies 
  (title, released, overview, rating, director, for_kids) 
VALUES 
  ('매트릭스', 1999, '혁명적임', 9.5, '워쇼스키', 0),
  ('쇼생크 탈출', 1994, '최고의 영화', 9.8, '프랭크', 0),
  ('다크나이트', 2008, '완벽함', 9.7, '놀란', 0),
  ('펄프픽션', 1994, '독특함', 9.4, '타란티노', 0),
  ('포레스트 검프', 1994, '감동적', 9.2, '로버트', 0),
  ('인셉션', 2010, '복잡함', 9.3, '놀란', 0),
  ('파이트클럽', 1999, '충격적', 9.1, '핀처', 0),
  ('기생충', 2019, '통렬함', 9.6, '봉준호', 0),
  ('라라랜드', 2016, '낭만적', 8.8, '샤젤', 0),
  ('어벤져스', 2012, '재미있음', 8.5, '왓슨', 1),
  ('겨울왕국', 2013, '노래최고', 8.7, '크리스', 1),
  ('코코', 2017, '눈물남', 9.0, '언크리치', 1),
  ('주토피아', 2016, '교훈적', 8.9, '하워드', 1),
  ('센과치히로', 2001, '환상적', 9.5, '미야자키', 1),
  ('타이타닉', 1997, '슬픔', 8.9, '카메론', 0),
  ('글래디에이터', 2000, '웅장함', 8.8, '리들리', 0),
  ('시네마천국', 1988, '향수', 9.2, '토르나토레', 0),
  ('레옹', 1994, '애틋함', 8.9, '베송', 0),
  ('트루먼쇼', 1998, '철학적', 8.7, '웨어', 0),
  ('아마데우스', 1984, '예술적', 9.0, '포먼', 0),
  ('빅쇼트', 2015, '통쾌함', 8.6, '매케이', 0),
  ('위플래쉬', 2014, '열정적', 9.1, '샤젤', 0),
  ('그랜드부다페스트호텔', 2014, '독특함', 8.8, '앤더슨', 0),
  ('조커', 2019, '광기', 9.0, '필립스', 0),
  ('캐스트어웨이', 2000, '고독함', 8.5, '제메키스', 0),
  ('캐치미', 2002, '긴장감', 8.6, '스필버그', 0),
  ('이터널션샤인', 2004, '몽환적', 8.8, '곤드리', 0),
  ('트위스터', 1996, '스릴넘침', 7.9, '데본트', 0),
  ('노트북', 2004, '로맨틱', 8.3, '캐산드라', 0),
  ('비포선라이즈', 1995, '대화중심', 8.5, '링클레이터', 0),
  ('써니', 2011, '청춘', 8.6, '강형철', 0),
  ('올드보이', 2003, '복수', 9.0, '박찬욱', 0),
  ('부산행', 2016, '좀비', 8.7, '연상호', 0),
  ('변호인', 2013, '정의', 8.8, '양우석', 0),
  ('명량', 2014, '웅장함', 8.5, '김한민', 0),
  ('괴물', 2006, '가족애', 8.6, '봉준호', 0),
  ('범죄도시', 2017, '통쾌함', 8.7, '강윤성', 0),
  ('신과함께', 2017, '판타지', 8.4, '김용화', 0),
  ('택시운전사', 2017, '역사적', 8.9, '장훈', 0),
  ('아가씨', 2016, '반전', 8.7, '박찬욱', 0),
  ('국제시장', 2014, '감동', 8.5, '윤제균', 0),
  ('7번방의선물', 2013, '눈물', 9.1, '이환경', 1),
  ('도둑들', 2012, '스타일리쉬', 8.3, '최동훈', 0),
  ('암살', 2015, '통쾌', 8.6, '최동훈', 0),
  ('베테랑', 2015, '상쾌함', 8.5, '류승완', 0),
  ('해운대', 2009, '재난', 7.8, '윤제균', 0),
  ('실미도', 2003, '비극적', 8.6, '강우석', 0),
  ('태극기휘날리며', 2004, '전쟁', 8.9, '강제규', 0),
  ('왕의남자', 2005, '예술적', 8.7, '이준익', 0),
  ('곡성', 2016, '미스터리', 8.5, '나홍진', 0);
  
-- UPDATE

UPDATE movies SET rating = 1 WHERE director = '?' AND released = 2018;

-- DELETE

DELETE FROM movies;

/* sqlite_sequence 파일은 sqlite이 자동으로 만든 파일임.
우리가 movies 테이블에서 primary key 부분에 autoincrement를 설정했기 때문에
sqlite이 얼마나 많은 ID가 생성이 되었는지 추적하기위해 생성한 파일임.
*/

-- SELECT: table을 반환하는 명령어 


SELECT title, rating FROM movies; -- SELECT 문은 오른쪽에서 왼쪽으로 실행되고 FROM이 가장 먼저 실행된다. 
-- FROM movies가 먼저 실행되어 모든 데이터가 메모리에 올라간 후 SELECT가 어떤 칼럼을 결과물로 보여줄지 결정한다.

SELECT 
  title AS 제목,
  rating * 2 AS 평점
FROM
  movies;